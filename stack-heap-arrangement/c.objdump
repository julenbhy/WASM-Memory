
main:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d9 2f 00 00 	mov    0x2fd9(%rip),%rax        # 3fe8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 82 2f 00 00    	push   0x2f82(%rip)        # 3fa8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	f2 ff 25 83 2f 00 00 	bnd jmp *0x2f83(%rip)        # 3fb0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102d:	0f 1f 00             	nopl   (%rax)
    1030:	f3 0f 1e fa          	endbr64 
    1034:	68 00 00 00 00       	push   $0x0
    1039:	f2 e9 e1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    103f:	90                   	nop
    1040:	f3 0f 1e fa          	endbr64 
    1044:	68 01 00 00 00       	push   $0x1
    1049:	f2 e9 d1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    104f:	90                   	nop
    1050:	f3 0f 1e fa          	endbr64 
    1054:	68 02 00 00 00       	push   $0x2
    1059:	f2 e9 c1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    105f:	90                   	nop
    1060:	f3 0f 1e fa          	endbr64 
    1064:	68 03 00 00 00       	push   $0x3
    1069:	f2 e9 b1 ff ff ff    	bnd jmp 1020 <_init+0x20>
    106f:	90                   	nop

Disassembly of section .plt.got:

0000000000001070 <__cxa_finalize@plt>:
    1070:	f3 0f 1e fa          	endbr64 
    1074:	f2 ff 25 7d 2f 00 00 	bnd jmp *0x2f7d(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    107b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .plt.sec:

0000000000001080 <puts@plt>:
    1080:	f3 0f 1e fa          	endbr64 
    1084:	f2 ff 25 2d 2f 00 00 	bnd jmp *0x2f2d(%rip)        # 3fb8 <puts@GLIBC_2.2.5>
    108b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001090 <__stack_chk_fail@plt>:
    1090:	f3 0f 1e fa          	endbr64 
    1094:	f2 ff 25 25 2f 00 00 	bnd jmp *0x2f25(%rip)        # 3fc0 <__stack_chk_fail@GLIBC_2.4>
    109b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010a0 <malloc@plt>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	f2 ff 25 1d 2f 00 00 	bnd jmp *0x2f1d(%rip)        # 3fc8 <malloc@GLIBC_2.2.5>
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010b0 <__printf_chk@plt>:
    10b0:	f3 0f 1e fa          	endbr64 
    10b4:	f2 ff 25 15 2f 00 00 	bnd jmp *0x2f15(%rip)        # 3fd0 <__printf_chk@GLIBC_2.3.4>
    10bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

Disassembly of section .text:

00000000000010c0 <main>:
    10c0:	f3 0f 1e fa          	endbr64 
    10c4:	53                   	push   %rbx
    10c5:	48 8d 3d a0 0f 00 00 	lea    0xfa0(%rip),%rdi        # 206c <_IO_stdin_used+0x6c>
    10cc:	48 89 f3             	mov    %rsi,%rbx
    10cf:	e8 ac ff ff ff       	call   1080 <puts@plt>
    10d4:	48 8b 3b             	mov    (%rbx),%rdi
    10d7:	e8 44 02 00 00       	call   1320 <intermediate>
    10dc:	31 c0                	xor    %eax,%eax
    10de:	5b                   	pop    %rbx
    10df:	c3                   	ret    

00000000000010e0 <_start>:
    10e0:	f3 0f 1e fa          	endbr64 
    10e4:	31 ed                	xor    %ebp,%ebp
    10e6:	49 89 d1             	mov    %rdx,%r9
    10e9:	5e                   	pop    %rsi
    10ea:	48 89 e2             	mov    %rsp,%rdx
    10ed:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10f1:	50                   	push   %rax
    10f2:	54                   	push   %rsp
    10f3:	45 31 c0             	xor    %r8d,%r8d
    10f6:	31 c9                	xor    %ecx,%ecx
    10f8:	48 8d 3d c1 ff ff ff 	lea    -0x3f(%rip),%rdi        # 10c0 <main>
    10ff:	ff 15 d3 2e 00 00    	call   *0x2ed3(%rip)        # 3fd8 <__libc_start_main@GLIBC_2.34>
    1105:	f4                   	hlt    
    1106:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    110d:	00 00 00 

0000000000001110 <deregister_tm_clones>:
    1110:	48 8d 3d 01 2f 00 00 	lea    0x2f01(%rip),%rdi        # 4018 <__TMC_END__>
    1117:	48 8d 05 fa 2e 00 00 	lea    0x2efa(%rip),%rax        # 4018 <__TMC_END__>
    111e:	48 39 f8             	cmp    %rdi,%rax
    1121:	74 15                	je     1138 <deregister_tm_clones+0x28>
    1123:	48 8b 05 b6 2e 00 00 	mov    0x2eb6(%rip),%rax        # 3fe0 <_ITM_deregisterTMCloneTable@Base>
    112a:	48 85 c0             	test   %rax,%rax
    112d:	74 09                	je     1138 <deregister_tm_clones+0x28>
    112f:	ff e0                	jmp    *%rax
    1131:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1138:	c3                   	ret    
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001140 <register_tm_clones>:
    1140:	48 8d 3d d1 2e 00 00 	lea    0x2ed1(%rip),%rdi        # 4018 <__TMC_END__>
    1147:	48 8d 35 ca 2e 00 00 	lea    0x2eca(%rip),%rsi        # 4018 <__TMC_END__>
    114e:	48 29 fe             	sub    %rdi,%rsi
    1151:	48 89 f0             	mov    %rsi,%rax
    1154:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1158:	48 c1 f8 03          	sar    $0x3,%rax
    115c:	48 01 c6             	add    %rax,%rsi
    115f:	48 d1 fe             	sar    %rsi
    1162:	74 14                	je     1178 <register_tm_clones+0x38>
    1164:	48 8b 05 85 2e 00 00 	mov    0x2e85(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable@Base>
    116b:	48 85 c0             	test   %rax,%rax
    116e:	74 08                	je     1178 <register_tm_clones+0x38>
    1170:	ff e0                	jmp    *%rax
    1172:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1178:	c3                   	ret    
    1179:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001180 <__do_global_dtors_aux>:
    1180:	f3 0f 1e fa          	endbr64 
    1184:	80 3d 8d 2e 00 00 00 	cmpb   $0x0,0x2e8d(%rip)        # 4018 <__TMC_END__>
    118b:	75 2b                	jne    11b8 <__do_global_dtors_aux+0x38>
    118d:	55                   	push   %rbp
    118e:	48 83 3d 62 2e 00 00 	cmpq   $0x0,0x2e62(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1195:	00 
    1196:	48 89 e5             	mov    %rsp,%rbp
    1199:	74 0c                	je     11a7 <__do_global_dtors_aux+0x27>
    119b:	48 8b 3d 66 2e 00 00 	mov    0x2e66(%rip),%rdi        # 4008 <__dso_handle>
    11a2:	e8 c9 fe ff ff       	call   1070 <__cxa_finalize@plt>
    11a7:	e8 64 ff ff ff       	call   1110 <deregister_tm_clones>
    11ac:	c6 05 65 2e 00 00 01 	movb   $0x1,0x2e65(%rip)        # 4018 <__TMC_END__>
    11b3:	5d                   	pop    %rbp
    11b4:	c3                   	ret    
    11b5:	0f 1f 00             	nopl   (%rax)
    11b8:	c3                   	ret    
    11b9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011c0 <frame_dummy>:
    11c0:	f3 0f 1e fa          	endbr64 
    11c4:	e9 77 ff ff ff       	jmp    1140 <register_tm_clones>
    11c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011d0 <leaf>:
    11d0:	f3 0f 1e fa          	endbr64 
    11d4:	41 57                	push   %r15
    11d6:	4c 8d 3d 33 0e 00 00 	lea    0xe33(%rip),%r15        # 2010 <_IO_stdin_used+0x10>
    11dd:	41 56                	push   %r14
    11df:	41 55                	push   %r13
    11e1:	49 89 fd             	mov    %rdi,%r13
    11e4:	48 8d 3d 19 0e 00 00 	lea    0xe19(%rip),%rdi        # 2004 <_IO_stdin_used+0x4>
    11eb:	41 54                	push   %r12
    11ed:	49 89 f4             	mov    %rsi,%r12
    11f0:	55                   	push   %rbp
    11f1:	48 89 d5             	mov    %rdx,%rbp
    11f4:	53                   	push   %rbx
    11f5:	48 89 cb             	mov    %rcx,%rbx
    11f8:	48 83 ec 18          	sub    $0x18,%rsp
    11fc:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1203:	00 00 
    1205:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    120a:	31 c0                	xor    %eax,%eax
    120c:	c7 44 24 04 2a 00 00 	movl   $0x2a,0x4(%rsp)
    1213:	00 
    1214:	4c 8d 74 24 04       	lea    0x4(%rsp),%r14
    1219:	e8 62 fe ff ff       	call   1080 <puts@plt>
    121e:	4c 89 fe             	mov    %r15,%rsi
    1221:	bf 01 00 00 00       	mov    $0x1,%edi
    1226:	31 c0                	xor    %eax,%eax
    1228:	48 8b 15 e1 2d 00 00 	mov    0x2de1(%rip),%rdx        # 4010 <const_str>
    122f:	49 89 d0             	mov    %rdx,%r8
    1232:	48 89 d1             	mov    %rdx,%rcx
    1235:	e8 76 fe ff ff       	call   10b0 <__printf_chk@plt>
    123a:	4d 89 e0             	mov    %r12,%r8
    123d:	4c 89 e1             	mov    %r12,%rcx
    1240:	4c 89 e2             	mov    %r12,%rdx
    1243:	4c 89 fe             	mov    %r15,%rsi
    1246:	bf 01 00 00 00       	mov    $0x1,%edi
    124b:	31 c0                	xor    %eax,%eax
    124d:	e8 5e fe ff ff       	call   10b0 <__printf_chk@plt>
    1252:	4c 89 f1             	mov    %r14,%rcx
    1255:	4c 89 f2             	mov    %r14,%rdx
    1258:	bf 01 00 00 00       	mov    $0x1,%edi
    125d:	48 8d 35 2c 0e 00 00 	lea    0xe2c(%rip),%rsi        # 2090 <_IO_stdin_used+0x90>
    1264:	31 c0                	xor    %eax,%eax
    1266:	e8 45 fe ff ff       	call   10b0 <__printf_chk@plt>
    126b:	4c 89 f2             	mov    %r14,%rdx
    126e:	bf 01 00 00 00       	mov    $0x1,%edi
    1273:	31 c0                	xor    %eax,%eax
    1275:	4c 29 e2             	sub    %r12,%rdx
    1278:	48 8d 35 a9 0d 00 00 	lea    0xda9(%rip),%rsi        # 2028 <_IO_stdin_used+0x28>
    127f:	e8 2c fe ff ff       	call   10b0 <__printf_chk@plt>
    1284:	49 89 e8             	mov    %rbp,%r8
    1287:	48 89 e9             	mov    %rbp,%rcx
    128a:	48 89 ea             	mov    %rbp,%rdx
    128d:	4c 89 fe             	mov    %r15,%rsi
    1290:	bf 01 00 00 00       	mov    $0x1,%edi
    1295:	31 c0                	xor    %eax,%eax
    1297:	e8 14 fe ff ff       	call   10b0 <__printf_chk@plt>
    129c:	49 89 d8             	mov    %rbx,%r8
    129f:	48 89 d9             	mov    %rbx,%rcx
    12a2:	48 89 da             	mov    %rbx,%rdx
    12a5:	48 8d 35 93 0d 00 00 	lea    0xd93(%rip),%rsi        # 203f <_IO_stdin_used+0x3f>
    12ac:	bf 01 00 00 00       	mov    $0x1,%edi
    12b1:	31 c0                	xor    %eax,%eax
    12b3:	48 29 eb             	sub    %rbp,%rbx
    12b6:	e8 f5 fd ff ff       	call   10b0 <__printf_chk@plt>
    12bb:	48 89 da             	mov    %rbx,%rdx
    12be:	b9 2a 00 00 00       	mov    $0x2a,%ecx
    12c3:	31 c0                	xor    %eax,%eax
    12c5:	48 8d 35 fc 0d 00 00 	lea    0xdfc(%rip),%rsi        # 20c8 <_IO_stdin_used+0xc8>
    12cc:	bf 01 00 00 00       	mov    $0x1,%edi
    12d1:	e8 da fd ff ff       	call   10b0 <__printf_chk@plt>
    12d6:	31 c0                	xor    %eax,%eax
    12d8:	4d 89 e8             	mov    %r13,%r8
    12db:	4c 89 e9             	mov    %r13,%rcx
    12de:	4c 89 ea             	mov    %r13,%rdx
    12e1:	48 8d 35 20 0e 00 00 	lea    0xe20(%rip),%rsi        # 2108 <_IO_stdin_used+0x108>
    12e8:	bf 01 00 00 00       	mov    $0x1,%edi
    12ed:	e8 be fd ff ff       	call   10b0 <__printf_chk@plt>
    12f2:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    12f7:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    12fe:	00 00 
    1300:	75 0f                	jne    1311 <leaf+0x141>
    1302:	48 83 c4 18          	add    $0x18,%rsp
    1306:	5b                   	pop    %rbx
    1307:	5d                   	pop    %rbp
    1308:	41 5c                	pop    %r12
    130a:	41 5d                	pop    %r13
    130c:	41 5e                	pop    %r14
    130e:	41 5f                	pop    %r15
    1310:	c3                   	ret    
    1311:	e8 7a fd ff ff       	call   1090 <__stack_chk_fail@plt>
    1316:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    131d:	00 00 00 

0000000000001320 <intermediate>:
    1320:	f3 0f 1e fa          	endbr64 
    1324:	41 56                	push   %r14
    1326:	41 55                	push   %r13
    1328:	41 54                	push   %r12
    132a:	55                   	push   %rbp
    132b:	48 89 fd             	mov    %rdi,%rbp
    132e:	bf 2a 00 00 00       	mov    $0x2a,%edi
    1333:	48 83 ec 58          	sub    $0x58,%rsp
    1337:	66 0f 6f 05 f1 0d 00 	movdqa 0xdf1(%rip),%xmm0        # 2130 <malloc_size+0x4>
    133e:	00 
    133f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1346:	00 00 
    1348:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    134d:	31 c0                	xor    %eax,%eax
    134f:	c7 44 24 18 73 74 72 	movl   $0x69727473,0x18(%rsp)
    1356:	69 
    1357:	49 89 e6             	mov    %rsp,%r14
    135a:	48 b8 28 6c 6f 63 61 	movabs $0x20296c61636f6c28,%rax
    1361:	6c 29 20 
    1364:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    1369:	b8 6e 67 00 00       	mov    $0x676e,%eax
    136e:	0f 29 04 24          	movaps %xmm0,(%rsp)
    1372:	66 89 44 24 1c       	mov    %ax,0x1c(%rsp)
    1377:	c6 44 24 1e 00       	movb   $0x0,0x1e(%rsp)
    137c:	e8 1f fd ff ff       	call   10a0 <malloc@plt>
    1381:	66 0f 6f 05 b7 0d 00 	movdqa 0xdb7(%rip),%xmm0        # 2140 <malloc_size+0x14>
    1388:	00 
    1389:	bf 2a 00 00 00       	mov    $0x2a,%edi
    138e:	c7 40 20 69 6e 67 00 	movl   $0x676e69,0x20(%rax)
    1395:	49 89 c4             	mov    %rax,%r12
    1398:	0f 11 00             	movups %xmm0,(%rax)
    139b:	66 0f 6f 05 ad 0d 00 	movdqa 0xdad(%rip),%xmm0        # 2150 <malloc_size+0x24>
    13a2:	00 
    13a3:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    13a7:	e8 f4 fc ff ff       	call   10a0 <malloc@plt>
    13ac:	66 0f 6f 05 ac 0d 00 	movdqa 0xdac(%rip),%xmm0        # 2160 <malloc_size+0x34>
    13b3:	00 
    13b4:	ba 64 00 00 00       	mov    $0x64,%edx
    13b9:	48 8d 3d 98 0c 00 00 	lea    0xc98(%rip),%rdi        # 2058 <_IO_stdin_used+0x58>
    13c0:	66 89 50 20          	mov    %dx,0x20(%rax)
    13c4:	49 89 c5             	mov    %rax,%r13
    13c7:	0f 11 00             	movups %xmm0,(%rax)
    13ca:	66 0f 6f 05 9e 0d 00 	movdqa 0xd9e(%rip),%xmm0        # 2170 <malloc_size+0x44>
    13d1:	00 
    13d2:	0f 11 40 10          	movups %xmm0,0x10(%rax)
    13d6:	e8 a5 fc ff ff       	call   1080 <puts@plt>
    13db:	4c 89 e9             	mov    %r13,%rcx
    13de:	4c 89 e2             	mov    %r12,%rdx
    13e1:	4c 89 f6             	mov    %r14,%rsi
    13e4:	48 89 ef             	mov    %rbp,%rdi
    13e7:	e8 e4 fd ff ff       	call   11d0 <leaf>
    13ec:	48 8b 44 24 48       	mov    0x48(%rsp),%rax
    13f1:	64 48 2b 04 25 28 00 	sub    %fs:0x28,%rax
    13f8:	00 00 
    13fa:	75 0c                	jne    1408 <intermediate+0xe8>
    13fc:	48 83 c4 58          	add    $0x58,%rsp
    1400:	5d                   	pop    %rbp
    1401:	41 5c                	pop    %r12
    1403:	41 5d                	pop    %r13
    1405:	41 5e                	pop    %r14
    1407:	c3                   	ret    
    1408:	e8 83 fc ff ff       	call   1090 <__stack_chk_fail@plt>

Disassembly of section .fini:

0000000000001410 <_fini>:
    1410:	f3 0f 1e fa          	endbr64 
    1414:	48 83 ec 08          	sub    $0x8,%rsp
    1418:	48 83 c4 08          	add    $0x8,%rsp
    141c:	c3                   	ret    
